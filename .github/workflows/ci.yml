name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # 前端代码检查和测试
  frontend:
    runs-on: ubuntu-latest
    needs: shared-types  # 等待shared-types构建完成
    defaults:
      run:
        working-directory: apps/frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install pnpm
      uses: pnpm/action-setup@v4
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
        cache-dependency-path: 'pnpm-lock.yaml'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build shared-types
      run: cd ../../packages/shared-types && pnpm build
      
    - name: TypeScript check
      run: pnpm tsc --noEmit
      
    - name: ESLint check
      run: pnpm lint
      
    - name: Prettier check
      run: pnpm format:check
      
    - name: Run tests with coverage
      run: pnpm test -- --coverage --reporter=verbose
      
    - name: Upload frontend coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: frontend-coverage
        path: apps/frontend/coverage/
        
    - name: Check frontend coverage threshold
      run: |
        # 运行测试并生成覆盖率JSON报告
        pnpm test -- --coverage --reporter=json > coverage-report.json || true
        
        # 检查JSON文件是否有效
        if ! jq empty coverage-report.json 2>/dev/null; then
          echo "⚠️  Coverage report JSON is invalid, running simple coverage check"
          pnpm test -- --coverage
          echo "✅ Frontend tests passed with coverage report"
          exit 0
        fi
        
        # 解析覆盖率
        COVERAGE=$(jq '.coverageMap | to_entries | map(.value.summary) | map(.lines.pct) | add / length' coverage-report.json)
        echo "Frontend coverage: $COVERAGE%"
        
        if (( $(echo "$COVERAGE < 60" | bc -l) )); then
          echo "❌ Frontend coverage ($COVERAGE%) is below 60% threshold"
          exit 1
        fi
        echo "✅ Frontend coverage ($COVERAGE%) meets 60% threshold"

  # 后端代码检查和测试
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/backend
        
    services:
      mysql:
        image: mysql:8.4
        env:
          MYSQL_ROOT_PASSWORD: test_password
          MYSQL_DATABASE: pagemaker_test
          MYSQL_ROOT_HOST: '%'
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
        cache-dependency-path: 'apps/backend/requirements.txt'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage pytest-cov
        
    - name: Flake8 check
      run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      
    - name: Black format check
      run: black --check .
      
    - name: Run tests with coverage
      env:
        DJANGO_SETTINGS_MODULE: pagemaker.test_settings
        SECRET_KEY: test-secret-key-for-ci-testing-only
        DB_NAME: pagemaker_test
        DB_USER: root
        DB_PASSWORD: test_password
        DB_HOST: localhost
        DB_PORT: 3306
      run: |
        # Django测试框架会自动创建和管理测试数据库
        coverage run --source='.' manage.py test --settings=pagemaker.test_settings
        coverage report --omit="pagemaker/integrations/*,*/urls.py,*/views.py,test_jwt.py,*/tests.py,pagemaker/validators.py" --show-missing
        coverage html
        
    - name: Upload backend coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: backend-coverage
        path: apps/backend/htmlcov/
        
    - name: Check backend coverage threshold
      run: |
        COVERAGE=$(coverage report --omit="pagemaker/integrations/*,*/urls.py,*/views.py,test_jwt.py,*/tests.py,pagemaker/validators.py" | grep TOTAL | awk '{print $4}' | sed 's/%//')
        echo "Backend coverage: $COVERAGE%"
        if (( $(echo "$COVERAGE < 60" | bc -l) )); then
          echo "❌ Backend coverage ($COVERAGE%) is below 60% threshold"
          exit 1
        fi
        echo "✅ Backend coverage ($COVERAGE%) meets 60% threshold"

  # 共享类型包测试
  shared-types:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/shared-types
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install pnpm
      uses: pnpm/action-setup@v4
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
        cache-dependency-path: 'pnpm-lock.yaml'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build package
      run: pnpm build
      
    - name: TypeScript check
      run: pnpm tsc --noEmit
      
    - name: Run tests
      run: pnpm test 